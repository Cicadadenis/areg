import telebot
from telebot import types,apihelper
import keyboards
import config
import sqlite3
import requests
import datetime
import json
from tools.mysql import connect

	


text_faq = '''<b>–ü–û –í–°–ï–ú –í–û–ü–†–û–°–ê–ú 
–ü–ò–°–ê–¢–¨ @alxkks</b>
'''

info = """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ
1. –ü–æ—Ä—è–¥–æ–∫ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å–ª–µ–¥—É—é—â–∏–π:
- 1.1. –ù–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–Ω–æ–º–µ—Ä–∞", –≤—ã–±—Ä–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Å–µ—Ä–≤–∏—Å
- 1.2  –ù–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "—Å—Ç—Ä–∞–Ω–∞", –≤—ã–±—Ä–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—Ç—Ä–∞–Ω—É
- 1.3  –ù–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–ª—É—á–∏—Ç—å —Å–º—Å", –¥–∞–ª–µ–µ —É –≤–∞—Å –ø–æ—è–≤–∏—Ç—Å—è –Ω–æ–º–µ—Ä
- 1.4  –î–æ–∂–¥–∞—Ç—å—Å—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è —Å–º—Å –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è
- 1.5  –ï—Å–ª–∏ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π —Å–º—Å, —Å–ª–µ–¥—É–µ—Ç –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "üîÇ –ó–∞–ø—Ä–æ—Å–∏—Ç—å –µ—â–µ —Å–º—Å"
- 1.6  –ï—Å–ª–∏ –≤—Å–µ –≤–µ—Ä–Ω–æ –∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–æ–Ω—á–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –¥–∞–Ω–Ω—ã–º —Å–µ—Ä–≤–∏—Å–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑", –ª–∏–±–æ –∞–∫—Ç–∏–≤–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ (15 –º–∏–Ω—É—Ç)
- 1.7  –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è —Å–º—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 15 –º–∏–Ω—É—Ç, –ø–æ—Å–ª–µ —á–µ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è.

2. –°—Ç–æ–∏–º–æ—Å—Ç—å –∞–∫—Ç–∏–≤–∞—Ü–∏–π —Å–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–µ–π—Å–∫—É—Ä–∞–Ω—Ç—É (–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –¥–æ –ø–æ–∫—É–ø–∫–∏ –Ω–æ–º–µ—Ä–∞).
- 2.1 –î–µ–Ω—å–≥–∏ —Å–ø–∏—Å—ã–≤–∞—é—Ç—Å—è —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é –æ–ø–µ—Ä–∞—Ü–∏–∏ (–ø.1.4,1.5 —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞).

3. –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –≤—ã–¥–µ–ª–µ–Ω, –Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω (—Ç–æ –µ—Å—Ç—å –≤—ã –Ω–µ —É–≤–∏–¥–µ–ª–∏ –∫–æ–¥ –∏–∑ —Å–º—Å), –≤—ã –º–æ–∂–µ—Ç–µ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –æ—Ç–º–µ–Ω–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é –±–µ–∑ –∫–∞–∫–æ–≥–æ-–ª–∏–±–æ —à—Ç—Ä–∞—Ñ–∞. –í —Å–ª—É—á–∞–µ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –∏–ª–∏ –ø–µ—Ä–µ–±–∏—Ä–∞–Ω–∏—è –Ω–æ–º–µ—Ä–æ–≤ –≤ –ø–æ–∏—Å–∫–µ –ª—É—á—à–µ–≥–æ, –±—É–¥—É—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —Å–∞–Ω–∫—Ü–∏–∏ –Ω–∞ —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.

4. –ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ –≤—ã –¥–∞—ë—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –æ—Ç @AVTOREGBOT.

5. –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å –Ω–æ–º–µ—Ä–∞–º–∏ —Ö—Ä–∞–Ω–∏—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –Ω–µ –ø–æ–¥–ª–µ–∂–∏—Ç —É–¥–∞–ª–µ–Ω–∏—é.

6.  –ö–∞—Ç–µ–≥–æ—Ä–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ @AVROTERGBOT –≤ –ª—é–±—ã—Ö –ø—Ä–æ—Ç–∏–≤–æ–ø—Ä–∞–≤–Ω—ã—Ö —Ü–µ–ª—è—Ö.
- 6.1 –¢–∞–∫–∂–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ —Å –ø–æ—Å–ª–µ–¥—É—é—â–∏–º–∏ —Ü–µ–ª—è–º–∏, –Ω–∞—Ä—É—à–∞—é—â–∏–µ –£–≥–æ–ª–æ–≤–Ω—ã–π –ö–æ–¥–µ–∫—Å –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏: –æ–±–º–∞–Ω, –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ –∏ –ø—Ä–æ—á–∏–µ (–£–ö –†–§ 138, –£–ö –†–§ 159, –£–ö –†–§ 228, –£–ö –†–§ 272, –£–ö –†–§ 273, –£–ö –†–§ 274)
- 6.2 –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫.

7. –ú—ã –Ω–µ –Ω–µ—Å–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã, –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è, –≤–∫–ª—é—á–∞—è –≤–æ–∑–º–æ–∂–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏, –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –Ω–∞ —Å—Ç—Ä–∞—Ö –∏ —Ä–∏—Å–∫ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–æ–±—Ä–µ–ª –∞–∫—Ç–∏–≤–∞—Ü–∏—é

8. –í–æ–∑–≤—Ä–∞—Ç –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–æ–¥–∞—á–µ –∑–∞—è–≤–∫–∏ –Ω–∞ avtoregbot@bk.ru

9. –í–æ–∑–≤—Ä–∞—Ç –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –∑–∞ –æ—à–∏–±–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - –Ω–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω

10. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –∏–ª–∏ –±—Ä–µ—à–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∏ –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç—Å—è –ø–æ –£–ö –†–§ —Å—Ç.273
–ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ", –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º."""


def main(userid):
	connection,q = connect()
	
	q.execute(f'SELECT * FROM ugc_users WHERE userid = "{userid}"')
	row = q.fetchone()
	q.execute(f'SELECT name FROM ugc_country WHERE id = "{row[3]}"')
	
	text = f'''‚ùï –ü—Ä–∏–≤–µ—Ç —Ç—É—Ç —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä–∞!
‚ùï –í–∞—à –±–∞–ª–∞–Ω—Å - {"%.2f" % float(row[2])} —Ä—É–±'''
	return text


def profile(message):
	connection,q = connect()
	
	q.execute(f'SELECT * FROM ugc_users WHERE userid = "{message.chat.id}"')
	row = q.fetchone()
	text = f'''üßæ –ü—Ä–æ—Ñ–∏–ª—å

‚ùï –í–∞—à id - {message.chat.id}
‚ùï –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ - {row[7]}
‚ùï –í–∞—à –ª–æ–≥–∏–Ω - @{message.chat.username}

üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å - {"%.2f" % float(row[2])} —Ä—É–±–ª–µ–π
'''
	return text


def referals(userid):
	connection,q = connect()
	
	q.execute(f'SELECT * FROM ugc_users WHERE userid = "{userid}"')
	row = q.fetchone()
	q.execute(f'SELECT SUM(summa) FROM ugc_referals_buys WHERE ref = "{userid}" and ref_numb = "1"')
	first_ref_earn = q.fetchone()[0]
	q.execute(f'SELECT COUNT(id) FROM ugc_users WHERE ref1 = "{userid}"')
	one_refs = q.fetchone()
	# all_refs_count = f'{0 if all_refs[0] == None else int(all_refs[0]) +  0 if all_refs[1] == None else int(all_refs[1]) + 0 if all_refs[2] == None else int(all_refs[2]) }'
	text = f'''üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–µ—Ç—å

–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:
https://t.me/AVTOREGBOT?start={userid}

–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è –≤—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ - {"%.2f" % float(row[6])} ‚ÇΩ
–í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ - {one_refs[0]} –ª—é–¥–µ–π

–ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–π –ø–æ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –ø–æ–ø–æ–ª–Ω–∏—Ç –±–∞–ª–∞–Ω—Å, —Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 30 % –æ—Ç —Å—É–º–º—ã –µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞'

'''
	return text





def qiwi_pay(userid):
	connection,q = connect()
	
	q.execute(f'SELECT * FROM ugc_settings')
	row = q.fetchone()
	text = f'''–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ QIWI:
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
üëâ –ù–æ–º–µ—Ä  <code>{config.qiwi_number}</code>
üëâ –ö–æ–º–µ–Ω—Ç–∞—Ä–∏–π  <code>{userid}</code>
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ

‚ö†Ô∏è –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è = –¥–µ–Ω—å–≥–∏ –º–Ω–µ –≤ –∫–∞—Ä–º–∞–Ω —Ç–∞–∫ —á—Ç–æ —Å–≤–µ—Ä—è–π—Ç–µ –≤—Å–µ —á—Ç–æ–±—ã –±—ã–ª–æ

‚è≥ –ü–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤ –¥–æ–∂–¥–∏—Ç–µ—Å—å –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ.'''
	return text

def btc_pay(userid):
	text = f'''üèµ –í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ —á–µ—Ä–µ–∑ —á–µ–∫ BTC Banker. –°–ª–µ–¥—É–π—Ç–µ —É–∫–∞–∑–∞–Ω–∏—è–º:

–ß—Ç–æ –±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –±–æ—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ (–≤ —ç—Ç–æ—Ç –∂–µ —á–∞—Ç) <b>—Ä—É–±–ª–µ–≤—ã–π</b> BTC <b>—á–µ–∫</b> –Ω–∞ –∂–µ–ª–∞–Ω–Ω—É—é —Å—É–º–º—É.
–ù–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ <b>–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —á–µ–∫</b> –∏ –ø–æ–ø–æ–ª–Ω–∏—Ç –í–∞—à –±–∞–ª–∞–Ω—Å –Ω–∞ —Å—É–º–º—É –í–∞—à–µ–≥–æ —á–µ–∫–∞ –≤ —Ç–µ—á–µ–Ω–∏–∏ <b>¬± –º–∏–Ω—É—Ç—ã.</b>

‚ÄºÔ∏è –í–∞–∂–Ω–æ! –ù–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç <b>—Ç–æ–ª—å–∫–æ</b> —á–µ–∫–∏, <b>—Å–æ–∑–¥–∞–Ω–Ω—ã–µ –≤ —Ä—É–±–ª—è—Ö!</b>
–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –æ—à–∏–±–æ–∫ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É –±–æ—Ç–∞ –Ω–∞–∂–∞–≤ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´üîç–°–≤—è–∑—å –∏ –ø—Ä–∞–≤–∏–ª–∞¬ª'''
	return text


def rent_text(userid, rentid):
	connection,q = connect()
	
	q.execute(f'SELECT * FROM ugc_users WHERE userid = "{userid}"')
	row = q.fetchone()
	q.execute(f'SELECT * FROM ugc_country WHERE id = "{row[3]}"') 
	country = q.fetchone()[2]
	q.execute(f'SELECT * FROM ugc_rent_list WHERE rentid = "{rentid}"')
	rent = q.fetchone()
	text = f'''‚ùï –í—ã —É—Å–ø–µ—à–Ω–æ –∞—Ä–µ–Ω–¥–æ–≤–∞–ª–∏ –Ω–æ–º–µ—Ä

–°–µ—Ä–≤–∏—Å: <code>{rent[2]}</code>
–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: <code>{rent[4]}</code>
–°—Ä–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞—Ä–µ–Ω–¥—ã –Ω–æ–º–µ—Ä–∞: <code>{rent[8]}</code>
'''
	return text

def rent_text_activ(userid, rentid):
	connection,q = connect()
	
	q.execute(f'SELECT * FROM ugc_users WHERE userid = "{userid}"')
	row = q.fetchone()
	q.execute(f'SELECT * FROM ugc_country WHERE id = "{row[3]}"') 
	country = q.fetchone()[2]
	q.execute(f'SELECT * FROM ugc_rent_list WHERE rentid = "{rentid}"')
	rent = q.fetchone()
	answer = requests.get(f'https://sms-activate.ru/stubs/handler_api.php?api_key={config.token_sms_activate}&action=getRentStatus&id={rentid}').json()
	if answer['status'] == 'success':
		text = f'''–°–µ—Ä–≤–∏—Å: <code>{rent[2]}</code>
–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: <code>{rent[4]}</code>
–°—Ä–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞—Ä–µ–Ω–¥—ã –Ω–æ–º–µ—Ä–∞: <code>{rent[8]}</code>

üì© –°–æ–æ–±—â–µ–Ω–∏—è:'''
		for i in answer['values']:
			print(i)
			text = f"{text}\n–°–º—Å: <code>{answer['values'][str(i)]['text']}</code>\n–î–∞—Ç–∞: {answer['values'][str(i)]['date']}\n"
	elif answer['status'] == 'error' and answer['message'] == 'STATUS_WAIT_CODE':
		text = f'''–°–µ—Ä–≤–∏—Å: <code>{rent[2]}</code>
–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: <code>{rent[4]}</code>
–°—Ä–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞—Ä–µ–Ω–¥—ã –Ω–æ–º–µ—Ä–∞: <code>{rent[8]}</code>

üì© –°–æ–æ–±—â–µ–Ω–∏—è:'''

	elif answer['status'] == 'finish':
		text = f'''<b>–ù–û–ú–ï–† –ó–ê–í–ï–†–®–ò–õ –†–ê–ë–û–¢–£</b>
–°–µ—Ä–≤–∏—Å: <code>{rent[2]}</code>
–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: <code>{rent[4]}</code>
–°—Ä–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞—Ä–µ–Ω–¥—ã –Ω–æ–º–µ—Ä–∞: <code>{rent[8]}</code>

üì© –°–æ–æ–±—â–µ–Ω–∏—è:'''
		for i in answer['values']:
			print(i)
			text = f"{text}\n–°–º—Å: <code>{answer['values'][str(i)]['text']}</code>\n–î–∞—Ç–∞: {answer['values'][str(i)]['date']}\n"
		q.execute(f"""update ugc_rent_list set activ = '0' where rentid = '{rentid}' """)
		connection.commit()
	else:
		q.execute(f"""update ugc_rent_list set activ = '0' where rentid = '{rentid}' """)
		connection.commit()
		text = '–ù–æ–º–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É'

	return text


def admin_stata():
	connection,q = connect()
	
	now = datetime.datetime.now()
	time = now.strftime("%Y-%m-%d")
	time_two = now.strftime("%Y-%m-%d %H:")

	count_users = q.execute(f'SELECT COUNT(userid) FROM ugc_users').fetchone()[0]
	count_users_24 = q.execute(f'SELECT COUNT(userid) FROM ugc_users where date_reg LIKE "{time}%"').fetchone()[0]
	count_users_1 = q.execute(f'SELECT COUNT(userid) FROM ugc_users where date_reg LIKE "{time_two}%"').fetchone()[0]
	statistika_qiwi_24 = q.execute(f'SELECT SUM(summa) FROM ugc_pays where date_pay LIKE  "{time}%"').fetchone()[0]
	statistika_btc_24 = q.execute(f'SELECT SUM(summa) FROM ugc_pays_btc where date_pay LIKE "{time}%"').fetchone()[0]
	statistika_qiwi = q.execute(f'SELECT SUM(summa) FROM ugc_pays').fetchone()[0]
	statistika_btc = q.execute(f'SELECT SUM(summa) FROM ugc_pays_btc').fetchone()[0]

	text = f'''<b>‚ùï –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö:</b>

‚ùï –ó–∞ –≤—Å–µ –≤—Ä–µ–º—è - <b>{count_users}</b>
‚ùï –ó–∞ –¥–µ–Ω—å - <b>{count_users_24}</b>
‚ùï –ó–∞ —á–∞—Å - <b>{count_users_1}</b>

<b>‚ùï –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–π –∑–∞ 24 —á–∞—Å–∞</b>
‚ùï QIWI: <b>{statistika_qiwi_24} ‚ÇΩ</b>
‚ùï BANKER: <b>{statistika_btc_24} ‚ÇΩ</b>

<b>‚ö†Ô∏è –ù–∏–∂–µ –ø—Ä–∏–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è</b>
‚ùï –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è QIWI: <b>{statistika_qiwi} ‚ÇΩ</b>
‚ùï –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è BANKER: <b>{statistika_btc} ‚ÇΩ</b>
	'''
	return text


def country_list(service, tt,userid):
	try:
		connection,q = connect()
		
		if tt == '1':
			spisok = []
			q.execute(f'SELECT balance FROM ugc_users where userid = "{userid}"')
			balance = q.fetchone()[0]
			text_send = f'‚ùï –í–∞—à –±–∞–ª–∞–Ω—Å - {balance} —Ä—É–±\n‚ùï –í –Ω–∞–ª–∏—á–∏–∏:\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n'
			q.execute(f'SELECT * FROM ugc_service_all where code = "{service}" and spisok = "1"')
			row_site = q.fetchone()
			if row_site[6] == 'smshub':
				response = requests.get(url=f'https://smshub.org/stubs/handler_api.php?api_key={config.token_sms}&action=getPrices&service={service}').json()
				q.execute(f'SELECT * FROM ugc_country')
				row_sitee = q.fetchall()
				for i in row_sitee:
					try:
						amm = i[2]
						answer = response[str(amm)]
						if len(answer) != 0:
							text = response[str(amm)][str(service)]
							for colvo in text:
								price = response[str(amm)][str(service)][str(colvo)]
								q.execute(f'SELECT name FROM ugc_country where idd = "{amm}"')
								row = q.fetchone()[0]
								q.execute(f'SELECT price FROM ugc_service_all where code = "{service}" and country = "{i[0]}" and price != "0"')
								# q.execute(f'SELECT price FROM ugc_service_all where code = "{service}" and country = "{i[0]}"')
								row_price = q.fetchone()
								if row_price != None:
									spisok.append(row_price)
									text_send = f'{text_send}{row} | {price} | {float(row_price[0])} ‚ÇΩ\n'
								else:
									continue
								break
					except:
						continue
			else:
				response = requests.get(url=f'https://sms-activate.ru/stubs/handler_api.php?api_key={config.token_sms_activate}&action=getPrices&service={service}').json()
				q.execute(f'SELECT * FROM ugc_country')
				row_sitee = q.fetchall()
				for i in row_sitee:
					amm = i[2]
					try:
						answer = response[str(amm)][str(service)]
						if int(answer['count']) > 0:
							text = response[str(amm)][str(service)]['count']
							price = response[str(amm)][str(service)]['cost']
							q.execute(f'SELECT name FROM ugc_country where idd = "{amm}"')
							row = q.fetchone()[0]
							q.execute(f'SELECT price FROM ugc_service_all where code = "{service}" and country = "{i[0]}" and price != "0"')
							row_price = q.fetchone()[0]
							if row_price != None:
								spisok.append(row_price)
								text_send = f'{text_send}{row} | {text} | {float(row_price)} ‚ÇΩ\n'
							else:
								pass
					except:
						continue

			if len(spisok) >= 1:
				return text_send
			else:
				return '–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–æ–º–µ—Ä–æ–≤ –Ω–µ—Ç, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è!'
	except:
		pass


